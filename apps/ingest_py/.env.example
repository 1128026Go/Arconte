# ========================================
# ARCONTE - Ingest Service Configuration (Python + FastAPI)
# ========================================
# Este archivo contiene TODAS las variables necesarias para el servicio de ingestión
# Copia este archivo a .env y ajusta los valores según tu entorno

# ========================================
# API Security (CRÍTICO)
# ========================================
# API Key compartida con Laravel backend
# IMPORTANTE: Este valor DEBE coincidir con INGEST_API_KEY en apps/api_php/.env
# IMPORTANTE: Usar un valor aleatorio de 64 caracteres hexadecimales

# Development (debe coincidir con backend)
INGEST_API_KEY=5d95c7ed99d196f47c374cc04c7cf77c2235a29b67dc85baa573f3bb815024b1

# Production (CAMBIAR - generar nuevo con: openssl rand -hex 32)
# INGEST_API_KEY=

# ========================================
# Server Configuration
# ========================================
# Puerto donde corre el servicio FastAPI
PORT=8001

# Host/IP donde escucha el servidor
# Development: localhost/127.0.0.1
HOST=127.0.0.1

# Production (si se expone externamente)
# HOST=0.0.0.0

# Ambiente de ejecución
ENVIRONMENT=development

# Production
# ENVIRONMENT=production

# ========================================
# Laravel Backend Connection
# ========================================
# URL del backend Laravel para callbacks
LARAVEL_API_URL=http://localhost:8000/api

# Production
# LARAVEL_API_URL=https://api.arconte.com/api

# API Key para autenticarse con Laravel (si es necesario)
# LARAVEL_API_KEY=

# ========================================
# Database (Opcional - si ingest necesita DB)
# ========================================
# Solo si el servicio necesita acceso directo a la DB
# (Normalmente se comunica con Laravel via API)

# DB_HOST=127.0.0.1
# DB_PORT=5432
# DB_NAME=arconte
# DB_USER=arconte
# DB_PASSWORD=arconte_secure_2025

# ========================================
# Rama Judicial Scraping
# ========================================
# URL base de Rama Judicial
RAMA_JUDICIAL_URL=https://consultaprocesos.ramajudicial.gov.co

# Timeout para requests (segundos)
RAMA_JUDICIAL_TIMEOUT=30

# Máximo de reintentos en caso de error
RAMA_JUDICIAL_MAX_RETRIES=3

# Delay entre requests (segundos) - evitar rate limiting
RAMA_JUDICIAL_DELAY=2

# User agent para requests
RAMA_JUDICIAL_USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

# ========================================
# Google Gemini AI
# ========================================
# API Key para Gemini (análisis de autos)
# Obtener en: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=

# Modelo de Gemini a usar
GEMINI_MODEL=gemini-2.0-flash-exp

# Temperatura para generación (0.0-1.0)
GEMINI_TEMPERATURE=0.1

# Máximo de tokens en respuesta
GEMINI_MAX_TOKENS=2048

# ========================================
# Scheduler Configuration
# ========================================
# Intervalo de verificación de casos (minutos)
# Cada cuánto se revisan los casos activos
SCHEDULER_CHECK_INTERVAL=60

# Habilitar scheduler automático al iniciar
SCHEDULER_ENABLED=true

# Hora de inicio de verificaciones diarias (formato 24h)
SCHEDULER_START_HOUR=8

# Hora de fin de verificaciones diarias (formato 24h)
SCHEDULER_END_HOUR=20

# ========================================
# Logging Configuration
# ========================================
# Nivel de logging (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Production
# LOG_LEVEL=WARNING

# Archivo de log (opcional)
# LOG_FILE=ingest_service.log

# ========================================
# Performance & Limits
# ========================================
# Máximo de casos a procesar por lote
MAX_BATCH_SIZE=10

# Timeout para procesamiento de un caso (segundos)
PROCESS_TIMEOUT=60

# Máximo de workers concurrentes (Playwright)
MAX_WORKERS=3

# ========================================
# Playwright Configuration
# ========================================
# Modo headless (true para producción)
PLAYWRIGHT_HEADLESS=true

# Navegador a usar (chromium, firefox, webkit)
PLAYWRIGHT_BROWSER=chromium

# Timeout para navegación (milisegundos)
PLAYWRIGHT_TIMEOUT=30000

# ========================================
# Cache Configuration (Opcional)
# ========================================
# Habilitar cache de resultados
CACHE_ENABLED=false

# TTL del cache (segundos)
# CACHE_TTL=3600

# ========================================
# Monitoring & Alerts (Opcional)
# ========================================
# Email para alertas de errores críticos
# ALERT_EMAIL=admin@arconte.com

# Slack webhook para notificaciones
# SLACK_WEBHOOK_URL=

# ========================================
# Development Tools
# ========================================
# Habilitar auto-reload en cambios de código
AUTO_RELOAD=true

# Production
# AUTO_RELOAD=false

# Habilitar endpoints de debug
DEBUG_ENDPOINTS=true

# Production
# DEBUG_ENDPOINTS=false

# ========================================
# Production Checklist
# ========================================
# Antes de deploy:
# [ ] Cambiar INGEST_API_KEY (y sincronizar con backend)
# [ ] ENVIRONMENT=production
# [ ] LOG_LEVEL=WARNING o ERROR
# [ ] PLAYWRIGHT_HEADLESS=true
# [ ] AUTO_RELOAD=false
# [ ] DEBUG_ENDPOINTS=false
# [ ] HOST=0.0.0.0 (si se expone externamente)
# [ ] Configurar GEMINI_API_KEY
# [ ] Ajustar SCHEDULER_CHECK_INTERVAL según carga
# [ ] Verificar límites de recursos (MAX_WORKERS, MAX_BATCH_SIZE)
# [ ] Configurar alertas (ALERT_EMAIL o SLACK_WEBHOOK_URL)

# ========================================
# Health Check
# ========================================
# Endpoint: http://localhost:8001/health
# Esperado: {"status": "ok", "service": "ingest"}

# ========================================
# Referencias
# ========================================
# Docs: apps/ingest_py/README.md
# Docs: apps/ingest_py/API_EXAMPLES.md
# Docs: apps/ingest_py/AUTOS_VIGILANCIA.md
# Docs: docs/integraciones/rama_judicial.md
# FastAPI docs: https://fastapi.tiangolo.com/
