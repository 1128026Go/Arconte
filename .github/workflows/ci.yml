name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    name: Laravel Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: arconte_test
          POSTGRES_USER: arconte_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7.2-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, pgsql, redis, curl, zip, gd
          coverage: none

      - name: Copy .env
        working-directory: apps/api_php
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Install Dependencies
        working-directory: apps/api_php
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Run Migrations
        working-directory: apps/api_php
        run: php artisan migrate --force

      - name: Run Tests
        working-directory: apps/api_php
        run: php artisan test --parallel

  react-tests:
    name: React Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install Dependencies
        working-directory: apps/web
        run: npm ci

      - name: Run Linter
        working-directory: apps/web
        run: npm run lint --if-present || echo "No lint script found"

      - name: Run Tests
        working-directory: apps/web
        run: npm run test --if-present || echo "No test script found"

      - name: Build
        working-directory: apps/web
        run: npm run build

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        working-directory: apps/ingest_py
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run Tests
        working-directory: apps/ingest_py
        run: |
          if [ -d "tests" ]; then
            pytest tests/ -v
          else
            echo "No tests found, skipping..."
          fi
